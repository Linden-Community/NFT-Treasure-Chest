{"remainingRequest":"D:\\project\\dapp\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\dapp\\src\\api\\eventBus.js","dependencies":[{"path":"D:\\project\\dapp\\src\\api\\eventBus.js","mtime":1652334493387},{"path":"D:\\project\\dapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650249328532},{"path":"D:\\project\\dapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1650249335774}],"contextDependencies":[],"result":["import Vue from 'vue';\nvar bus = new Vue();\nexport default {\n  /**\n   * 注册全局事件\n   * @param eventName 事件名称\n   * @param handler 事件处理函数\n   * @param scope vm对象，一般传this 建议必须要传（页面的this），自动销毁功能\n   * @param once 是否单次注册\n   */\n  on: function on(eventName, handler) {\n    var scope = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var once = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    if (once) {\n      bus.$once(eventName, handler);\n      return;\n    }\n\n    bus.$on(eventName, handler);\n\n    if (scope) {\n      var originalDestroy = scope.$destroy;\n\n      scope.$destroy = function () {\n        bus.$off(eventName, handler);\n        originalDestroy.call(this);\n      };\n    }\n  },\n\n  /**\n   * 触发事件\n   * @param eventName 要触发的事件名称\n   * @param data 事件对象\n   */\n  emit: function emit(eventName) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    bus.$emit(eventName, data);\n  }\n};",{"version":3,"sources":["D:\\project\\dapp\\src\\api\\eventBus.js"],"names":["Vue","bus","on","eventName","handler","scope","once","$once","$on","originalDestroy","$destroy","$off","call","emit","data","$emit"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,IAAMC,GAAG,GAAG,IAAID,GAAJ,EAAZ;AAEA,eAAe;AACX;;;;;;;AAOAE,EAAAA,EARW,cAQRC,SARQ,EAQGC,OARH,EAQwC;AAAA,QAA5BC,KAA4B,uEAApB,IAAoB;AAAA,QAAdC,IAAc,uEAAP,KAAO;;AAC/C,QAAIA,IAAJ,EAAU;AACNL,MAAAA,GAAG,CAACM,KAAJ,CAAUJ,SAAV,EAAqBC,OAArB;AACA;AACH;;AACDH,IAAAA,GAAG,CAACO,GAAJ,CAAQL,SAAR,EAAmBC,OAAnB;;AACA,QAAIC,KAAJ,EAAW;AACP,UAAII,eAAe,GAAGJ,KAAK,CAACK,QAA5B;;AACAL,MAAAA,KAAK,CAACK,QAAN,GAAiB,YAAY;AACzBT,QAAAA,GAAG,CAACU,IAAJ,CAASR,SAAT,EAAoBC,OAApB;AACAK,QAAAA,eAAe,CAACG,IAAhB,CAAqB,IAArB;AACH,OAHD;AAIH;AACJ,GArBU;;AAuBX;;;;;AAKAC,EAAAA,IA5BW,gBA4BNV,SA5BM,EA4BgB;AAAA,QAAXW,IAAW,uEAAJ,EAAI;AACvBb,IAAAA,GAAG,CAACc,KAAJ,CAAUZ,SAAV,EAAqBW,IAArB;AACH;AA9BU,CAAf","sourcesContent":["import Vue from 'vue';\n\nconst bus = new Vue();\n\nexport default {\n    /**\n     * 注册全局事件\n     * @param eventName 事件名称\n     * @param handler 事件处理函数\n     * @param scope vm对象，一般传this 建议必须要传（页面的this），自动销毁功能\n     * @param once 是否单次注册\n     */\n    on(eventName, handler, scope = null, once = false) {\n        if (once) {\n            bus.$once(eventName, handler);\n            return;\n        }\n        bus.$on(eventName, handler);\n        if (scope) {\n            let originalDestroy = scope.$destroy;\n            scope.$destroy = function () {\n                bus.$off(eventName, handler);\n                originalDestroy.call(this);\n            }\n        }\n    },\n\n    /**\n     * 触发事件\n     * @param eventName 要触发的事件名称\n     * @param data 事件对象\n     */\n    emit(eventName, data = {}) {\n        bus.$emit(eventName, data);\n    }\n};"]}]}